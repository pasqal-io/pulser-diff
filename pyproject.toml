[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pulser-diff"
description = "Differentiable backend for Pulser"
readme = "README.md"
version = "0.1.0"
requires-python = ">=3.9,<3.11"
license = {text = "Proprietary"}
keywords = ["quantum", "pulser"]
authors = [
  { name = "Vytautas Abramavicius", email = "vytautas.abramavicius@pasqal.com" },
  { name = "Melvin Mathe", email = "melvin.mathe@pasqal.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]

# always specify a version for each package
# to maintain consistency
# pulser-core and pulser-simulation are tied to specific commit - don't change it
dependencies = [
  "pyqtorch",
  "pulser-core[torch] @ git+https://github.com/pasqal-io/Pulser.git@fcf980463f47b92722901aba0e63bec9a28e01af#subdirectory=pulser-core",
  "pulser-simulation[torch] @ git+https://github.com/pasqal-io/Pulser.git@fcf980463f47b92722901aba0e63bec9a28e01af#subdirectory=pulser-simulation",
  "torch==2.0.1",
]

[tool.hatch.metadata]
allow-direct-references = true
allow-ambiguous-features = true

# install libraries from the Pasqal quantum libraries private PyPi repository
# ask in the relevant code Slack channels if you do not have the credentials
# to access the PyPi repository
[tool.hatch.envs.default.env-vars]
# PIP_EXTRA_INDEX_URL = "https://{env:PYPI_USERNAME}:{env:PYPI_PASSWORD}@gitlab.pasqal.com/api/v4/projects/190/packages/pypi/simple"

[project.urls]
# Documentation = ""
Issues = "https://gitlab.pasqal.com/pqs/pulser-diff/-/issues"
Source = "https://gitlab.pasqal.com/pqs/pulser-diff"

[tool.hatch.build.targets.wheel]
packages = ["pulser_diff"]

[tool.hatch.envs.default]
dependencies = [
  "flaky",
  "hypothesis",
  "pytest",
  "pytest-cov",
  "pytest-mypy",
  "pytest-xdist",
  "nbconvert",
  "ipykernel",
  "pre-commit",
  "black",
  "isort",
  "ruff",
  "notebook<7.0",
  "dill",
  "mypy"
]

[tool.hatch.envs.default.scripts]
test = "pytest --ignore=./tests/test_notebooks.py --cov-report=term-missing --cov-config=pyproject.toml --cov=pulser_diff {args}"
test-notebooks = "pytest -vvv ./tests/test_notebooks.py {args}"

[tool.pytest.ini_options]
markers = [
  "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]
testpaths = ["tests"]
addopts = """-vvv --cov-report=term-missing --cov-config=pyproject.toml --cov=pulser_diff --cov=tests"""
xfail_strict = true
filterwarnings = [
  "ignore:Call to deprecated create function FieldDescriptor",
  "ignore:Call to deprecated create function Descriptor",
  "ignore:Call to deprecated create function EnumDescriptor",
  "ignore:Call to deprecated create function EnumValueDescriptor",
  "ignore:Call to deprecated create function FileDescriptor",
  "ignore:Call to deprecated create function OneofDescriptor",
  "ignore:distutils Version classes are deprecated."
]

[tool.hatch.envs.docs]
dependencies = [
  "mkdocs",
  "mkdocs-material",
  "mkdocstrings",
  "mkdocstrings-python",
  "mkdocs-section-index",
  "mkdocs-exclude",
  "markdown-exec",
  "mkdocs-jupyter",
  "nbconvert",
  "jupyter_contrib_nbextensions",
  "notebook<7.0",
  "mike",
]

[tool.hatch.envs.docs.scripts]
build = "mkdocs build --clean --strict {args}"
serve = "mkdocs serve --dev-addr localhost:8000"
test = "mkdocs build --clean --strict"

[[tool.hatch.envs.test.matrix]]
python = ["310", "311", "312"]

[tool.coverage.run]
branch = true
parallel = true
# uncomment to omit any file from the
# coverage. Regexps can be used
# to select all files from a folder
#omit = [
#  "template_python/to_omit.py",
#]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.ruff]
lint.select = ["E", "F", "I", "Q"]
lint.extend-ignore = ["F841"]
line-length = 100

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.black]
line-length = 100
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
no_implicit_optional = true
ignore_missing_imports = true
warn_redundant_casts = true
